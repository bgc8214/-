package com.effective.apackage.packageeffective.utilities;

import android.content.Context;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ExpandableListView;
import android.widget.TextView;


import java.util.ArrayList;
import java.util.List;


import com.effective.apackage.packageeffective.R;
import com.effective.apackage.packageeffective.domain.ItemValue;
import com.effective.apackage.packageeffective.domain.PackageValue;


public class ExpandAdapter extends BaseExpandableListAdapter {

    private Context context;
    private int groupLayout = 0;
    private int chlidLayout = 0;
    private ArrayList<PackageValue> DataList;
    private LayoutInflater myinf = null;
    TextView mNameView;
    TextView mPriceView;
    TextView mEfficientView;

    public ExpandAdapter(Context context, int groupLay, int chlidLay, ArrayList<PackageValue> DataList) {
        this.DataList = DataList;
        this.groupLayout = groupLay;
        this.chlidLayout = chlidLay;
        this.context = context;
        this.myinf = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    }

    @Override
    public int getGroupCount() {
        return DataList.size();
    }

    @Override
    public int getChildrenCount(int groupPosition) {
        Log.d("boss2", "사이즈 " + DataList.get(groupPosition).getItemValues().size());
        //    Log.d("boss","사이즈 후 " +DataList.get(groupPosition).getComponents().toString());

        return DataList.get(groupPosition).getItemValues().size();
    }

    @Override
    public Object getGroup(int groupPosition) {
        return DataList.get(groupPosition);
    }

    @Override
    public Object getChild(int groupPosition, int childPosition) {

        return DataList.get(groupPosition).getItemValues().get(childPosition);
    }

    @Override
    public long getGroupId(int groupPosition) {
        return groupPosition;
    }

    @Override
    public long getChildId(int groupPosition, int childPosition) {
        return childPosition;
    }

    @Override
    public boolean hasStableIds() {
        return false;
    }

    @Override
    public View getGroupView(final int groupPosition, final boolean isExpanded, View convertView, final ViewGroup parent) {
        if (convertView == null) {
            convertView = myinf.inflate(this.groupLayout, parent, false);
        }
        String formatPrice = String.format("￦%,d", DataList.get(groupPosition).getPackagePrice());

        Log.d("boss2", "그룹뷰 ");

        mNameView = (TextView) convertView.findViewById(R.id.packageName);
        mEfficientView = (TextView) convertView.findViewById(R.id.efficient);
        mPriceView = (TextView) convertView.findViewById(R.id.packagePrice);

        mNameView.setText(DataList.get(groupPosition).getPackageName());
        mEfficientView.setText(DataList.get(groupPosition).getPackageValue() + "%");
        mPriceView.setText(formatPrice);

        mNameView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ExpandableListView expandableListView = (ExpandableListView) parent;
                if (!isExpanded) {
                    expandableListView.expandGroup(groupPosition);
                } else {
                    expandableListView.collapseGroup(groupPosition);
                }
            }
        });


        return convertView;
    }

    @Override
    public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {
        if (convertView == null) {
            convertView = myinf.inflate(this.chlidLayout, parent, false);
        }
        Log.d("boss2", "차일드 뷰");
        TextView itemName = (TextView) convertView.findViewById(R.id.itemName);
        TextView itemCount = (TextView) convertView.findViewById(R.id.itemCount);
        ItemValue itemValue = (ItemValue) getChild(groupPosition, childPosition);
        itemName.setText(itemValue.getItemName());
        itemCount.setText(Double.toString(itemValue.getItemCount()) + "개");
        return convertView;


    }

    @Override
    public boolean isChildSelectable(int groupPosition, int childPosition) {
        return true;
    }
}
